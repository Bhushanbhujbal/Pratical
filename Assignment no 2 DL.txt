Assignment no 2 DL
1] import tensorflow as tf
2] from tensorflow import keras
3] import pandas as pd
   import numpy as np
   import matplotlib.pyplot as plt
   import random
   %matplotlib inline 
4] mnist=tf.keras.datasets.mnist
   (x_train,y_train),(x_test,y_test)=mnist.load_data() 
5] plt.matshow(x_train[0]) 
6] x_train=x_train/255
   x_test=x_test/255 
7] x_train[0] 
8] model=keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)),
    keras.layers.Dense(128,activation='relu'),
    keras.layers.Dense(10,activation='softmax')
    ]) 
9] model.summary()
10] model.compile(optimizer='sgd',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
11] history=model.fit(x_train,y_train,validation_data=(x_test,y_test),epochs=10)  
12] test_loss,test_acc=model.evaluate(x_test,y_test)
    print("Loss=%.3f" %test_loss)
    print("Accuracy=%.3f" %test_acc)
13] n=random.randint(0,9999)
    plt.imshow(x_test[n])
    plt.show 
14] test_predict=model.predict(x_test)
    test_predict_labels=np.argmax(test_predict,axis=1)
    confusion_matrix=tf.math.confusion_matrix(labels=y_test,predictions=test_predict_labels)
    print('confusion matrix of the test set :\n', confusion_matrix) 
